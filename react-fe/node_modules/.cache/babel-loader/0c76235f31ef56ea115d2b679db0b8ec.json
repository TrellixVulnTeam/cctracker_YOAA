{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AbeJohnson\\\\Desktop\\\\Code\\\\Github Repositories\\\\cctracker\\\\react-fe\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:3001/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"login-wrapper\">\n    //   <div className=\"login-box\">\n    //     <div className=\"img-div\">\n    //       <img className=\"logo-img\" src=\"/images/cctracker-logo.png\" alt=\"\"></img>\n    //     </div>\n    //     <div class=\"input-container\">\n    //       <FontAwesomeIcon icon={faUser} swapOpacity className=\"user-icon\" />\n    //       <input id=\"firstname\" class=\"input\" type=\"text\" placeholder=\" \" />\n    //       <label for=\"firstname\" class=\"placeholder\">First name</label>\n    //     </div>\n    //     <button type=\"text\" class=\"submit\">submit</button>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/AbeJohnson/Desktop/Code/Github Repositories/cctracker/react-fe/src/pages/Login/Login.jsx"],"names":["React","useState","PropTypes","FontAwesomeIcon","faUser","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACpC,SAAOC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiC;AAK1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALoC,GAAhC,CAAL,CAOJO,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQA;;AAEF,eAAe,SAASC,KAAT,OAA6B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,EAAxC;;AAEA,QAAMqB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAMpB,SAAS,CAAC;AAC5Ba,MAAAA,QAD4B;AAE5BE,MAAAA;AAF4B,KAAD,CAA7B;AAIAH,IAAAA,QAAQ,CAACQ,KAAD,CAAR;AACD,GAPD;;AASA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AAdF;AAkCD;;GA/CuBT,K;;KAAAA,K;AAiDxBA,KAAK,CAACU,SAAN,GAAkB;AAChBT,EAAAA,QAAQ,EAAEf,SAAS,CAACyB,IAAV,CAAeC;AADT,CAAlB","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('http://localhost:3001/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    setToken(token);\r\n  }\r\n\r\n  return(\r\n    // <div className=\"login-wrapper\">\r\n    //   <div className=\"login-box\">\r\n    //     <div className=\"img-div\">\r\n    //       <img className=\"logo-img\" src=\"/images/cctracker-logo.png\" alt=\"\"></img>\r\n    //     </div>\r\n    //     <div class=\"input-container\">\r\n    //       <FontAwesomeIcon icon={faUser} swapOpacity className=\"user-icon\" />\r\n    //       <input id=\"firstname\" class=\"input\" type=\"text\" placeholder=\" \" />\r\n    //       <label for=\"firstname\" class=\"placeholder\">First name</label>\r\n    //     </div>\r\n    //     <button type=\"text\" class=\"submit\">submit</button>\r\n    //   </div>\r\n    // </div>\r\n    <div class=\"form\">\r\n      {/* <div class=\"title\">Welcome Back!</div>\r\n      <div class=\"input-container ic1\">\r\n        <input id=\"firstname\" class=\"input\" type=\"text\" placeholder=\" \" />\r\n        <div class=\"cut\"></div>\r\n        <label for=\"firstname\" class=\"placeholder\">First name</label>\r\n      </div>\r\n      <div class=\"input-container ic2\">\r\n        <input id=\"lastname\" class=\"input\" type=\"text\" placeholder=\" \" />\r\n        <div class=\"cut\"></div>\r\n        <label for=\"lastname\" class=\"placeholder\">Last name</label>\r\n      </div>\r\n      <div class=\"input-container ic2\">\r\n        <input id=\"email\" class=\"input\" type=\"text\" placeholder=\" \" />\r\n        <div class=\"cut cut-short\"></div>\r\n        <label for=\"email\" class=\"placeholder\">Email</label>\r\n      </div>\r\n      <button type=\"text\" class=\"submit\">submit</button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}